1，
	工厂方法模式是通过继承的方式实现应用程序的解耦。
	
	抽象工厂模式则通过对象组合（让对象作为类的成员变量，通过构造函数或set方法给类的对象实例变量赋值）的
		方式实现应用程序的解耦。

2，
	工厂方法模式用来创建“一个”抽象产品，具体工厂（Caocao）实现工厂方法（ISwordFactory.createSword）来
		创建具体产品（各种刀）。	
	
	抽象工厂模式用来创建一个“产品家族”的抽象类型。
	
	可以说，抽象工厂模式和工厂方法模式的区别就在于需要创建对象的复杂程度上。
	
	简而言之-> 
	工厂方法模式：一个抽象产品类，可以派生出多个具体产品类。   
	              一个抽象工厂类，可以派生出多个具体工厂类。   
	              每个具体工厂类只能创建一个具体产品类的实例。   
	抽象工厂模式：多个抽象产品类，每个抽象产品类可以派生出多个具体产品类。   
	              一个抽象工厂类，可以派生出多个具体工厂类。   
	              每个具体工厂类可以创建多个具体产品类的实例。 
	
		
	
	
3，两者还是有联系的，例如，抽象工厂模式中的具体工厂就是通过工厂方法模式创建的产品。